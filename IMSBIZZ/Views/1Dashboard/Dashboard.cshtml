@model IMSBIZZ.Models.ReportViewModel
@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<link href="~/Content/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/adminlte/components/jquery/dist/jquery.min.js"></script>
<script src="~/Scripts/select2.min.js"></script>
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Dashboard
            <small>Control panel</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li class="active">Dashboard</li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <div class="col-md-3">
                            <div class="form-group">
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.City, ViewBag.Cities as List<SelectListItem>, "SELECT CITY", new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <div class="col-md-10">
                                    @{
                                        List<SelectListItem> reportTypes = new List<SelectListItem>();
                                        reportTypes.Add(new SelectListItem
                                        {
                                            Text = "DTR-Wise",
                                            Value = "DTR-Wise"
                                        });
                                        reportTypes.Add(new SelectListItem
                                        {
                                            Text = "Caste-Wise",
                                            Value = "Caste-Wise",
                                        });
                                        reportTypes.Add(new SelectListItem
                                        {
                                            Text = "Installment-Wise",
                                            Value = "Installment-Wise",
                                        });

                                    }
                                    @Html.DropDownListFor(model => model.ReportType, reportTypes, "SELECT REPORT TYPE", new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <div class="col-md-10">
                                    <select id="reportData" class="form-control" multiple="multiple"></select>
                                </div>

                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <input type="submit" value="Submit" class="btn btn-primary" id="btnSubmit" />
                                </div>
                                <div class="col-md-4">
                                    <input type="submit" value="Clear" class="btn btn-primary" id="btnClear" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <!-- AREA CHART -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Area Chart</h3>
                    </div>
                    <div class="box-body">
                        <div class="chart">
                            <canvas id="areaChart" style="height:250px"></canvas>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
                <!-- DONUT CHART -->
                <div class="box box-danger">
                    <div class="box-header with-border">
                        <h3 class="box-title">Pie Chart</h3>
                    </div>
                    <div class="box-body">
                        <canvas id="pieChart" style="height:250px"></canvas>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
            <!-- /.col (LEFT) -->
            <div class="col-md-6">
                <!-- Doughnut CHART -->
                <div class="box box-info">
                    <div class="box-header with-border">
                        <h3 class="box-title">Donut Chart</h3>
                    </div>
                    <div class="box-body">
                        <div class="chart">
                            <canvas id="doughnutChart" style="height:250px"></canvas>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
                <!-- BAR CHART -->
                <div class="box box-success">
                    <div class="box-header with-border">
                        <h3 class="box-title">Bar Chart</h3>
                    </div>
                    <div class="box-body">
                        <div class="chart">
                            <canvas id="barChart" style="height:297px"></canvas>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
            <!-- /.col (RIGHT) -->
        </div>
    </section>
</div>
@section Scripts
{

    <script type="text/javascript">
         var areaChart;
        var doughnutChart;
        var pieChart;
        var barChart;
        $(document).ready(function () {
            $('#reportData').select2({
                multiple: true
            });
            var url = '@Url.Action("FetchData", "Dashboard")';
            var reportData = $('#reportData');
            $("#ReportType").change(function () {
                var reportType = $('#ReportType').val();
                var city = $('#City').val();             

                $.getJSON(url, { cityId: city, reportType: reportType }, function (response) {
                    reportData.empty(); // remove any existing options
                    $.each(response, function (index, item) {
                        //reportData.append($('<option></option>').text(item.Text).val(item.Value));                       
                        var newOption = new Option(item.Text, item.Value, true, true);
                        $('#reportData').append(newOption).trigger('change');                      
                    });
                   
                });


                $('#btnClear').on('click', function () {
                    $("#reportData").val('').trigger('change');
                    $('#ReportType').val('')
                    $('#City').val('')
                    areaChart.destroy();
                    doughnutChart.destroy();
                    pieChart.destroy();
                    barChart.destroy();
                });

                $('#btnSubmit').on('click', function () {
                    var dsdata = $("#reportData").select2("val");
                    var reportLabels = $("#reportData").select2("data");
                    console.log(dsdata);
                    var label = [];
                    for (var i = 0, len = reportLabels.length; i < len; i++) {
                        label.push(reportLabels[i].text)
                    }
                    console.log(label);
                    if ($('#ReportType option:selected').val() == '' || $('#City option:selected').val() == '') {
                        alert('Please select Report type and City');
                        return false;
                    }

                    var barlabel = $("#ReportType").val();


                    //- AREA CHART
                    if (areaChart)
                        areaChart.destroy();

                    // Get context with jQuery - using jQuery's .get() method.
                    var areaChartCanvas = $('#areaChart').get(0).getContext('2d')
                    // This will get the first returned node in the jQuery collection.

                    var areaChartData = {
                        labels: label,
                        datasets: [
                            {
                                label: barlabel,
                                backgroundColor: ['#059BFF'],
                                pointColor: '#3b8bba',
                                pointStrokeColor: 'rgba(60,141,188,1)',
                                pointHighlightFill: '#3C8DBC',
                                pointHighlightStroke: 'rgba(60,141,188,1)',
                                data: dsdata
                            }
                        ]
                    }

                    var areaChartOptions = {
                        //Boolean - If we should show the scale at all
                        showScale: true,
                        //Boolean - Whether grid lines are shown across the chart
                        scaleShowGridLines: false,
                        //String - Colour of the grid lines
                        scaleGridLineColor: 'rgba(0,0,0,.05)',
                        //Number - Width of the grid lines
                        scaleGridLineWidth: 1,
                        //Boolean - Whether to show horizontal lines (except X axis)
                        scaleShowHorizontalLines: true,
                        //Boolean - Whether to show vertical lines (except Y axis)
                        scaleShowVerticalLines: true,
                        //Boolean - Whether the line is curved between points
                        bezierCurve: true,
                        //Number - Tension of the bezier curve between points
                        bezierCurveTension: 0.3,
                        //Boolean - Whether to show a dot for each point
                        pointDot: false,
                        //Number - Radius of each point dot in pixels
                        pointDotRadius: 4,
                        //Number - Pixel width of point dot stroke
                        pointDotStrokeWidth: 1,
                        //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                        pointHitDetectionRadius: 20,
                        //Boolean - Whether to show a stroke for datasets
                        datasetStroke: true,
                        //Number - Pixel width of dataset stroke
                        datasetStrokeWidth: 2,
                        //Boolean - Whether to fill the dataset with a color
                        datasetFill: true,
                        //String - A legend template
                        legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].lineColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
                        //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                        maintainAspectRatio: true,
                        //Boolean - whether to make the chart responsive to window resizing
                        responsive: true
                    }


                    //Create the area chart
                    areaChart = new Chart(areaChartCanvas, {
                        type: 'line',
                        data: areaChartData,
                        options: areaChartOptions
                    });

                    if (doughnutChart)
                        doughnutChart.destroy();
                    //- Doughnut CHART
                    var doughnutChartData = {
                        labels: label,
                        datasets: [
                            {
                                label: barlabel,
                                fill: false,
                                backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56', '#09D261','#A42823'],
                                pointColor: '#3b8bba',
                                pointStrokeColor: 'rgba(60,141,188,1)',
                                pointHighlightFill: '#3C8DBC',
                                pointHighlightStroke: 'rgba(60,141,188,1)',
                                data: dsdata
                            }
                        ]
                    }


                    var doughnutChartCanvas = $('#doughnutChart').get(0).getContext('2d');

                    doughnutChart = new Chart(doughnutChartCanvas, {
                        type: 'doughnut',
                        data: doughnutChartData                      
                    });

                    if (pieChart)
                        pieChart.destroy();
                    //- PIE CHART
                    var pieChartCanvas = $('#pieChart').get(0).getContext('2d')

                    var piedata = {
                        datasets: [{
                            data: dsdata,
                            backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56', '#09D261', '#A42823']
                        }],
                        // These labels appear in the legend and in the tooltips when hovering different arcs
                        labels: label
                    };

                    var pieOptions = {
                        //Boolean - Whether we should show a stroke on each segment
                        segmentShowStroke: true,
                        //String - The colour of each segment stroke
                        segmentStrokeColor: '#fff',
                        //Number - The width of each segment stroke
                        segmentStrokeWidth: 2,
                        //Number - The percentage of the chart that we cut out of the middle
                        percentageInnerCutout: 50, // This is 0 for Pie charts
                        //Number - Amount of animation steps
                        animationSteps: 100,
                        //String - Animation easing effect
                        animationEasing: 'easeOutBounce',
                        //Boolean - Whether we animate the rotation of the Doughnut
                        animateRotate: true,
                        //Boolean - Whether we animate scaling the Doughnut from the centre
                        animateScale: false,
                        //Boolean - whether to make the chart responsive to window resizing
                        responsive: true,
                        // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                        maintainAspectRatio: true,
                        //String - A legend template
                        legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<segments.length; i++){%><li><span style="background-color:<%=segments[i].fillColor%>"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'
                    }

                    pieChart = new Chart(pieChartCanvas, {
                        type: 'pie',
                        data: piedata,
                        options: pieOptions
                    });

                    //- BAR CHART

                    var bardata = {
                        // These labels appear in the legend and in the tooltips when hovering different arcs
                        labels: label,
                        datasets: [{
                            label: barlabel,
                            data: dsdata,
                            backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56', '#09D261', '#A42823']
                        }]
                    };

                    if (barChart)
                        barChart.destroy();

                    var barChartCanvas = $('#barChart').get(0).getContext('2d')
                    barChart = new Chart(barChartCanvas, {
                        type: 'bar',
                        data: bardata,
                        options: {
                            legend: { display: false },
                            title: {
                                display: true,
                                text: barlabel
                            }
                        }
                    });
                });
            });
        });
    </script>

}

